from bs4 import BeautifulSoup
import re
import os
import requests
import unittest
import sqlite3
import json

#Function to CALL THE API KEY
def scrape_data():
    url = "https://data.michigan.gov/resource/7frj-2rv6"
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        return data
    else:
        print (f"Failed to retrieve data from Michigan Government")
        return None


def set_up_database(data_name):
    path = os.path.dirname(os.path.abspath(__file__))
    conn = sqlite3.connect(path + "/" + data_name)
    return conn

def make_database(cur, conn):

    cur.execute('''CREATE TABLE IF NOT EXISTS MI_PerCapita_PersonalIncome
                (id INTEGER PRIMARY KEY, year INTEGER, michigan_percapita_income INTEGER,
                national_percapita_income INTEGER, michigan_percapita_rank INTEGER, michigan_percent_change INTEGER,
                national_percent_change INTEGER, michigan_percent_change_rank INTEGER )''')
    

    conn.commit()

def add_data_to_table(data, cur, conn):
    #set up id_counts to only do 25 at a time
    cur.execute('''SELECT COUNT(id) FROM MI_PerCapita_PersonalIncome ''')
    id_count = int(cur.fetchone()[0])
    if id_count == 32:
        print ("All data has been added")
        return None
    if id_count + 25 > len(data):
        end_count = len(data)
    else:
        end_count = id_count + 25

    # will add data to MI_PerCapita_PersonalIncome


    while id_count < end_count:
        i = id_count
        year = data[i]["year"]
        michigan_PCPI = int(data[i]["michigan_percapita_personal_income"])
        national_PCPI = int(data[i]["us_percapita_personal_income"])
        michigan_PCPI_rank = int(data[i]["michigan_perpersonalincomepercapitarank"])
        michigan_PCPI_change = float(data[i]["michigan_percapita_personal_income_pct_change"])
        national_PCPI_change = float(data[i]["us_percapita_personal_income_pct_change"])
        michigan_PCPI_change_rank = int(data[i]["michigan_percapita_personal_income_pct_change_rank"])

        cur.execute('''INSERT OR IGNORE INTO MI_PerCapita_PersonalIncome (id, year, michigan_percapita_income,
                    national_percapita_income, michigan_percapita_rank, michigan_percent_change,
                    national_percent_change, michigan_percent_change_rank) VALUES (?,?,?,?,?,?,?,?)''', 
                    (i, year, michigan_PCPI, national_PCPI, michigan_PCPI_rank, michigan_PCPI_change, national_PCPI_change, michigan_PCPI_change_rank))
        id_count += 1
        
        
    conn.commit()
    

#print (scrape_data())



def main():
    data = scrape_data()
    if data:
        conn = set_up_database("FinalProject.db")
        cur = conn.cursor()
        print("Data stored successfully!")

        make_database(cur, conn)
        add_data_to_table(data, cur, conn)


if __name__ == "__main__":
    main()
    unittest.main(verbosity=2)